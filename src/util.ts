export function generateHTMLContent (
    testResults:Array<{
        name:string;
        status:'passed'|'failed'|'skipped';
        duration?:number;
        error?:string;
    }>,
    browserName:string,
    duration:number
):string {
    const passed = testResults.filter(t => t.status === 'passed').length
    const failed = testResults.filter(t => t.status === 'failed').length
    const total = testResults.length
    const passRate = total > 0 ? ((passed / total) * 100).toFixed(1) : '0'

    return `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Results</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f8fafc;
            color: #334155;
            line-height: 1.6;
        }
        .container { max-width: 1200px; margin: 0 auto; padding: 2rem; }
        .header { 
            background: white; 
            padding: 2rem; 
            margin-bottom: 2rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        .title { font-size: 2rem; font-weight: 700; color: #1e293b; margin-bottom: 0.5rem; }
        .subtitle { color: #64748b; font-size: 1.1rem; }
        .summary { 
            display: grid; 
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); 
            gap: 1rem; 
            margin-bottom: 2rem; 
        }
        .summary-card { 
            background: white; 
            padding: 1.5rem; 
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            border-left: 4px solid;
        }
        .summary-card.passed { border-left-color: #10b981; }
        .summary-card.failed { border-left-color: #ef4444; }
        .summary-card.total { border-left-color: #3b82f6; }
        .summary-card.duration { border-left-color: #8b5cf6; }
        .summary-label { font-size: 0.875rem; color: #64748b; text-transform: uppercase; font-weight: 600; }
        .summary-value { font-size: 2rem; font-weight: 700; margin-top: 0.25rem; }
        .tests-section { background: white; padding: 2rem; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
        .section-title { font-size: 1.5rem; font-weight: 600; margin-bottom: 1.5rem; }
        .test-item { 
            display: flex; 
            align-items: center; 
            padding: 1rem; 
            border-bottom: 1px solid #e2e8f0;
            transition: background 0.2s;
        }
        .test-item:hover { background: #f8fafc; }
        .test-item:last-child { border-bottom: none; }
        .test-status { 
            width: 20px; 
            height: 20px; 
            margin-right: 1rem; 
            display: flex; 
            align-items: center; 
            justify-content: center; 
            font-weight: 600; 
            font-size: 0.75rem; 
            color: white; 
        }
        .test-status.passed { background: #10b981; }
        .test-status.failed { background: #ef4444; }
        .test-name { flex: 1; font-weight: 500; }
        .test-duration { color: #64748b; font-size: 0.875rem; }
        .browser-info { 
            background: #f1f5f9; 
            padding: 0.5rem 1rem; 
            font-size: 0.875rem; 
            color: #475569; 
            margin-bottom: 1rem; 
        }
        .empty-state { 
            text-align: center; 
            color: #64748b; 
            padding: 3rem; 
            font-style: italic; 
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1 class="title">Test Results</h1>
            <p class="subtitle">Generated by tapout • ${new Date().toLocaleString()}</p>
        </header>

        <div class="browser-info">
            Browser: ${browserName} • Duration: ${duration}ms
        </div>

        <div class="summary">
            <div class="summary-card total">
                <div class="summary-label">Total Tests</div>
                <div class="summary-value">${total}</div>
            </div>
            <div class="summary-card passed">
                <div class="summary-label">Passed</div>
                <div class="summary-value">${passed}</div>
            </div>
            <div class="summary-card failed">
                <div class="summary-label">Failed</div>
                <div class="summary-value">${failed}</div>
            </div>
            <div class="summary-card duration">
                <div class="summary-label">Pass Rate</div>
                <div class="summary-value">${passRate}%</div>
            </div>
        </div>

        <div class="tests-section">
            <h2 class="section-title">Test Details</h2>
            ${total === 0 ? '<div class="empty-state">No tests found</div>' :
                testResults.map(test => `
                    <div class="test-item">
                        <div class="test-status ${test.status}">
                            ${test.status === 'passed' ? '✓' : '✗'}
                        </div>
                        <div class="test-name">${test.name || 'Unnamed test'}</div>
                        <div class="test-duration">${test.duration || 0}ms</div>
                    </div>
                `).join('')
            }
        </div>
    </div>
</body>
</html>`
}
